[user]
	name = jorgechato
	email = jorgechato1@gmail.com
[url "https://"]
	insteadOf = git://
[core]
	eol = lf
	autocrlf = input
	safecrlf = false
	pager = less
	editor = gvim
[alias]
	ada = add -A
	co = checkout
	cob = checkout -b
	cobd = checkout -b develop
	cod = checkout develop
	cm = commit
	cma = commit --amend
	feto = fetch origin
	mod = merge origin/develop
	mob = "!f() { git merge origin/`git rev-parse --abbrev-ref HEAD`; }; f"
	l1 = log --oneline
	puta = push --tags
	po = pull origin
	pod = pull origin develop
	pom = pull origin master
	pob = "!f() { git pull origin `git rev-parse --abbrev-ref HEAD`; }; f"
	pu = push origin
	pub = "!f() { git push origin `git rev-parse --abbrev-ref HEAD` $@; }; f"
	puf = "!f() { git push origin `git rev-parse --abbrev-ref HEAD` --force; }; f"
	pur = "!f() { git pub; git pr; }; f"
	pussy = push origin develop
	pushy = push origin master
	rmv = remote -v
	taga = "!f() { git tag -a $1 -m '$1' $2; }; f"
	tal = tag -l
	st = status -s
	stu = status -uno
	sta = stash
	stam = "!f() { git stash save '$@' }; f"
	stal = stash list
	stap = stash apply

	pr = "!f() {\
		remote=`git rmv | grep origin | grep push | awk '{print $2}'`;\
		project=`echo $remote | awk -F/ '{ print $(NF-1) }'`;\
		repo=`echo $remote | awk -F/ '{ print $NF }' | cut -d. -f1`;\
		branch=`git rev-parse --abbrev-ref HEAD`;\
		browser=chrome;\
		case $1 in\
		github | gh) start $browser https://github.com/$project/$repo/compare/$branch...develop?expand=1;;\
		gitlab | gl) start $browser https://gitlab.com/$project/$repo/merge_requests/new?merge_request[source_branch]=$branch;;\
		bitbucket | bb) start $browser https://bitbucket.org/$project/$repo/pull-requests/new;;\
		echo) echo https://host:port/path/$project/$repo?branch=$branch;;\
		*) start $browser https://github.com/$project/$repo/compare/$branch...develop?expand=1;;\
		esac;\
		}; f"
